# # C/C++
# If:
#   PathMatch: [.*\.cc, .*\.cpp, .*\.cxx, .*\.hpp, .*\.inl, .*\.c, .*\.h]

# Diagnostics:
#   ClangTidy:
#     Add:
      # - bugprone*
      # - clang-diagnostic-*
      # - clang-analyzer-*
      # - modernize-*
      # - performance*
      # - readability*
      # - cppcoreguidelines*
      # - google-*
      # - performance-*
#     Remove:
#       - cppcoreguidelines-avoid-magic-numbers
#       - readability-magic-numbers
#       - modernize-use-trailing-return-type
#       - cppcoreguidelines-pro-type-reinterpret-cast
#       - google-objc-function-naming


# C/C++
If:
  PathMatch: [.*\.cc, .*\.cpp, .*\.cxx, .*\.hpp, .*\.inl, .*\.c, .*\.h]

Diagnostics:
  # clangd 14
  UnusedIncludes: Strict
  ClangTidy:
    Add:
      - bugprone*
      - modernize*
      - performance*
      - readability*
    Remove:
      - bugprone-easily-swappable-parameters
      - modernize-use-trailing-return-type
# clangd 14
# InlayHints:
#   Enabled: Yes
#   ParameterNames: Yes
#   DeducedTypes: Yes


---
# C
If:
  PathMatch: [.*\.c]

CompileFlags:
  Add: [--std=c17, -Wall, -Wextra, -Wpedantic]
---
# C++
If:
  PathMatch: [.*\.cc, .*\.cpp, .*\.cxx, .*\.hpp, .*\.inl, .*\.h]

CompileFlags:
  Add: [--std=c++17, -Wall, -Wextra, -Wpedantic]

Diagnostics:
  ClangTidy:
    Add:
      - cppcoreguidelines*
      - google-*
      - misc-*
---
# C source
If:
  PathMatch: [.*\.c]

CompileFlags:
  Add: [-xc]
---
# C header
If:
  PathMatch: []

CompileFlags:
  Add: [-xc-header]
---
# C++ source
If:
  PathMatch: [.*\.cc, .*\.cpp, .*\.cxx]

CompileFlags:
  Add: [-xc++]
---
# C++ header
If:
  PathMatch: [.*\.hpp, .*\.inl, .*\.h]

CompileFlags:
  Add: [-xc++-header]